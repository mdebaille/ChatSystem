import static org.junit.Assert.*;

import org.junit.Before;
import org.junit.Test;
import org.mockito.Mockito;

import static org.mockito.Mockito.*;

public class TestMessagesModel {

	private Message msg1;
	private Message msg2;
	private Message msg3;
	private Message msg4;
	private Message msg5;
	private Message msg6;
	private Message msg7;
	
	private MessagesModel messagesModel;
	private ChatIHM chatIHM1;
	private ChatIHM chatIHM2;
	
	@Before
	public void initialize(){
		msg1 = new Message(false, 4, ("aaaa").getBytes());
		msg2 = new Message(false, 4, ("bbbb").getBytes());
		msg3 = new Message(false, 4, ("cccc").getBytes());
		msg4 = new Message(false, 4, ("dddd").getBytes());
		msg5 = new Message(false, 4, ("eeee").getBytes());
		msg6 = new Message(false, 4, ("ffff").getBytes());
		msg7 = new Message(false, 4, ("gggg").getBytes());

		chatIHM1 = mock(ChatIHM.class);
		chatIHM2 = mock(ChatIHM.class);
		messagesModel = new MessagesModel();
	}
	
	@Test
	public void testAddMessage(){
		
<<<<<<< HEAD
		System.out.println("Ajout de 4 messages avec fenï¿½tre de chat fermï¿½e");
=======
		System.out.println("Ajout de 4 messages avec fenêtre de chat fermée");
>>>>>>> f5d17a686da08f43577c01f6738c164d3613ae50

		messagesModel.setChatActive(false);
		messagesModel.addMessage(msg1);
		messagesModel.addMessage(msg2);
		messagesModel.addMessage(msg3);
		
		assertEquals(3, messagesModel.getModelSize());
		
		//----------------------------------------------------------------------
		
<<<<<<< HEAD
		System.out.println("Ouverture d'une fenï¿½tre de chat");
=======
		System.out.println("Ouverture d'une fenêtre de chat");
>>>>>>> f5d17a686da08f43577c01f6738c164d3613ae50
		
		messagesModel.setChatActive(true);
		messagesModel.addObserver(chatIHM1);
		
		assertEquals(3, messagesModel.getModelSize());
		verify(chatIHM1).updateMessage(eq("aaaa".getBytes()));
		verify(chatIHM1).updateMessage(eq("bbbb".getBytes()));
		verify(chatIHM1).updateMessage(eq("cccc".getBytes()));
<<<<<<< HEAD
		//verify(chatIHM1, times(3)).updateMessage(any());
		
		//----------------------------------------------------------------------
		
		System.out.println("Ajout de 2 messages avec fenï¿½tre de chat ouverte");
=======
		verify(chatIHM1, times(3)).updateMessage(any());
		
		//----------------------------------------------------------------------
		
		System.out.println("Ajout de 2 messages avec fenêtre de chat ouverte");
>>>>>>> f5d17a686da08f43577c01f6738c164d3613ae50

		messagesModel.addMessage(msg4);
		messagesModel.addMessage(msg5);
		
		assertEquals(5, messagesModel.getModelSize());
		verify(chatIHM1).updateMessage(eq("dddd".getBytes()));
		verify(chatIHM1).updateMessage(eq("eeee".getBytes()));
		
		//----------------------------------------------------------------------
		
<<<<<<< HEAD
		System.out.println("Ajout d'un nouvel ObserverMessages sur le modï¿½le");
=======
		System.out.println("Ajout d'un nouvel ObserverMessages sur le modèle");
>>>>>>> f5d17a686da08f43577c01f6738c164d3613ae50
		
		messagesModel.setChatActive(true);
		messagesModel.addObserver(chatIHM2);
		
		verify(chatIHM2).updateMessage(eq("aaaa".getBytes()));
		verify(chatIHM2).updateMessage(eq("bbbb".getBytes()));
		verify(chatIHM2).updateMessage(eq("cccc".getBytes()));
		verify(chatIHM2).updateMessage(eq("dddd".getBytes()));
		verify(chatIHM2).updateMessage(eq("eeee".getBytes()));
<<<<<<< HEAD
		//verify(chatIHM2, times(5)).updateMessage(any());
		
		//----------------------------------------------------------------------
		
		System.out.println("Ajout de 2 messages avec fenï¿½tre de chat ouverte");
=======
		verify(chatIHM2, times(5)).updateMessage(any());
		
		//----------------------------------------------------------------------
		
		System.out.println("Ajout de 2 messages avec fenêtre de chat ouverte");
>>>>>>> f5d17a686da08f43577c01f6738c164d3613ae50

		messagesModel.addMessage(msg6);
		messagesModel.addMessage(msg7);
		
		assertEquals(7, messagesModel.getModelSize());
		verify(chatIHM1).updateMessage(eq("ffff".getBytes()));
		verify(chatIHM1).updateMessage(eq("gggg".getBytes()));
		verify(chatIHM2).updateMessage(eq("ffff".getBytes()));
		verify(chatIHM2).updateMessage(eq("gggg".getBytes()));
	}
}
